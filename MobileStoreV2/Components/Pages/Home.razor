@page "/"
@using Microsoft.EntityFrameworkCore.Metadata.Internal
@inject NavigationManager Navigation
@using MobileStoreV2.Components.Pages.AllDashboard
@inject IDialogService DialogService

<MudPaper Height="100%" Width="100%">
    <MudPaper Height="100%" Width="100%" Square="true" Class="text-center">
        <MudField Variant="Variant.Filled"> التاريخ اليوم : @datenow <MudIcon Icon="@Icons.Material.Filled.DateRange" Color="@Color.Info" /></MudField>
    </MudPaper> 

</MudPaper>
<MudSpacer />


<MudPaper Square="true" Style="box-shadow:none; padding-top:70px" >
    <MudGrid Spacing="3"Class="w-100 d-flex justify-content-evenly;" Style="margin-left:13px"  >
        @for (int i = 0; i <= 9; i++)
        {
            <CardInfo />
        }      
    </MudGrid>
</MudPaper>
<MudSpacer />
<br />
<br />


<MudGrid Style="padding:1.8rem">
    <MudItem xs="6">
        <MudPaper Class="d-flex align-center flex-column justify-center mud-width-full  ">
            <MudPaper Class="d-flex justify-content-end align-items-end w-100 shadow-none">
                <MudMenu Icon="@Icons.Material.Filled.MoreVert" AriaLabel="Open user menu">
                    <MudMenuItem OnClick="@(() => OnMenuItemSelected("Syriatel"))">syriatel إدخال رصيد</MudMenuItem>
                    <MudMenuItem OnClick="@(() => OnMenuItemSelected("MTN"))">MTN إدخال رصيد</MudMenuItem>
                    <MudMenuItem OnClick="@(() => OnMenuItemSelected("Waffa"))">Waffa إدخال رصيد</MudMenuItem>
                </MudMenu>
            </MudPaper>
            <MudPaper Class="d-flex justify-content-center align-items-center w-100 shadow-none">
                <EditForm Model="unitslist" OnValidSubmit="OnValidSubmit" style="width:500px" >
                    <DataAnnotationsValidator />

                    <MudCardContent>

                        <MudForm>
                            <MudRadioGroup @bind-Value="unitslist.Company">
                                <MudRadio Value="@("MTN")" Color="Color.Primary">MTN</MudRadio>
                                <MudRadio Value="@("Syriatel")" Color="Color.Info">Syriatel</MudRadio>
                            </MudRadioGroup>
                        </MudForm>
                        <MudTextField Label="الرقم" HelperText="اعلى عدد ارقام 10" Mask="@(new PatternMask("000 000 0000"))"
                                      @bind-Value="unitslist.Nummber" For="@(() => unitslist.Nummber)" />
                        <MudForm>
                            <MudRadioGroup @bind-Value="unitslist.PayType">
                                <MudRadio Value="true" Color="Color.Primary" Dense="true">مسبق الدفع</MudRadio>
                                <MudRadio Value="false" Color="Color.Info" Dense="false">لاحق الدفع</MudRadio>
                            </MudRadioGroup>
                        </MudForm>

                        <MudTextField Label="السعر"
                                      @bind-Value="unitslist.price" For="@(() => unitslist.price)" />

                        <MudField Variant="Variant.Filled">  رصيد الصندوق:  500000 ل.س</MudField>

                    </MudCardContent>

                    <MudCardActions>
                        <MudButton ButtonType="ButtonType.Submit" Variant="Variant.Filled" Color="Color.Primary" Class="ml-auto">حفظ</MudButton>
                    </MudCardActions>

                </EditForm>
            </MudPaper>
        </MudPaper>
    </MudItem>
    <MudItem xs="6">
        <MudPaper Class="d-flex align-center justify-center mud-width-full py-8"><BoxCard/></MudPaper>
    </MudItem>
</MudGrid>



@code {
    public DateTime datenow { get; set; } = DateTime.Now;
    public int ballance { get; set; }
    public bool _Visable { get; set; }

    private readonly DialogOptions _dialogOptions = new() { FullWidth = true };

    public IEnumerable<Units> filteredProducts = new List<Units>();
    Units unitslist = new Units();



    // string datenow;
    Timer aTimer;

    protected override void OnInitialized()
    {
        aTimer = new Timer(Tick, null, 0, 1000);
    }

    private Task OnMenuItemSelected(string selectedItem)
    {
     
        var parameters = new DialogParameters<CompanyUnit>
        {
            { x=>x.CompanyName , selectedItem}
        };
        return DialogService.ShowAsync<CompanyUnit>("Options Dialog", parameters);
    }


    private void Tick(object _)
    {
        datenow = DateTime.Now;
        InvokeAsync(StateHasChanged);
    }
    private void NavgateToDashBoard()
    {
        Navigation.NavigateTo($"/Dashboard");

    }

    public void Dispose()
    {
        aTimer?.Dispose();
    }
    private async void OnValidSubmit()
    {

    }
    public class Units
    {
        // Primary key
        public int Id { get; set; }

        // nummber of user
        [Required]
        [StringLength(12, ErrorMessage = "يجب ان يكون 10 ارقام.", MinimumLength = 12)]
        public string? Nummber { get; set; }

        // Syriatel and MTN
        [Required]
        [StringLength(30, ErrorMessage = "اسم المنتج مطلوب")]
        public string? Company { get; set; }

        //Prepayment or Postpaid
        [Required]
        [Range(0, 1, ErrorMessage = "يجب أن يكون أكبر من 0")]
        public bool PayType { get; set; }
        //Price Of Payes
        [Required]
        [Range(1, double.MaxValue, ErrorMessage = "يجب أن يكون أكبر من ")]
        public double price { get; set; }

    }
}
