@page "/upload-multiple"

<h3>Multiple File Upload</h3>

@* <InputFile OnChange="HandleFilesSelected" Multiple="true" />

@if (uploadedFiles != null && uploadedFiles.Any())
{
    <ul>
        @foreach (var file in uploadedFiles)
        {
            <li>@file.Name (@file.Size / 1024) KB</li>


            <img src="@uploadedImageData/@file.Name" alt="Uploaded Image" style="max-width: 100%; height: auto;" />

        }
    </ul>
} *@

<InputFile OnChange="HandleSelectedFile" accept="image/jpeg,image/png" />

@if (uploadedImageData != null)
{
    <img src="@uploadedImageData" alt="Uploaded Image" style="max-width: 100%; height: auto;" />
}


@code {
    private List<IBrowserFile> uploadedFiles = new List<IBrowserFile>();
    private string uploadedImageData;

    private async Task HandleFilesSelected(InputFileChangeEventArgs e)
    {
        foreach (var file in e.GetMultipleFiles())
        {
            uploadedFiles.Add(file);

            var filePath = Path.Combine("D:\\prjct\\gitm\\MobileStoreV2\\MobileStoreV2\\wwwroot\\", "upload-multi", file.Name);


            using (var fileStream = new FileStream(filePath, FileMode.Create))
            {
                await file.OpenReadStream().CopyToAsync(fileStream);
            }


            // The file is now saved to the server in the "wwwroot/uploads" folder.
        }
    }
    private IBrowserFile selectedFile;

    private async Task HandleSelectedFile(InputFileChangeEventArgs e)
    {
        selectedFile = e.File;

        if (selectedFile != null)
        {
            // Read the image as a stream
            var buffer = new byte[selectedFile.Size];
            using (var stream = selectedFile.OpenReadStream())
            {
                await stream.ReadAsync(buffer);
            }

            // Convert to base64
            uploadedImageData = $"data:{selectedFile.ContentType};base64,{Convert.ToBase64String(buffer)}";
        }
    }

}
